<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd" >

<properties>

    <entry key="showBookList">
        SELECT
            BOOK_CODE,
            BOOK_TITLE,
            BOOK_AUTHOR,
            BOOK_GENRE,
            BOOK_PUBLISHER
          FROM BOOKS
        WHERE BOOK_STATUS = 0;
    </entry>


    <entry key="rentBook">
        <![CDATA[
        INSERT INTO BORROW_RECORDS
        (book_code, user_id, book_title, borrow_date)
        VALUES (?, ?, ?, ?)
        ]]>
    </entry>

    <entry key="incrementBorrowCount">
        <![CDATA[
            UPDATE books
              SET borrow_count = borrow_count + 1
            WHERE book_code = ?
        ]]>
    </entry>

    <entry key="deleteBorrowRecord">
        <![CDATA[
            DELETE FROM borrow_records WHERE book_code = ? AND user_id = ?
        ]]>
    </entry>

    <entry key="updateBookStatus">
        <![CDATA[
            UPDATE books SET book_status = ? WHERE book_code = ?
        ]]>
    </entry>

    <entry key="selectBookTitleByCode">
        SELECT book_title FROM books WHERE book_code = ?
    </entry>

    <entry key="getBorrowedBooks">
        <![CDATA[
            SELECT br.book_code, b.book_title, br.borrow_date
              FROM borrow_records br
            JOIN books b ON br.book_code = b.book_code
            WHERE br.user_id = ?
        ]]>
    </entry>

    <entry key="updateBorrowCount">
        <![CDATA[
            UPDATE books SET borrow_count = borrow_count + 1 WHERE book_code = ?
        ]]>
    </entry>


    <entry key="returnBook">
        UPDATE BORROW_RECORDS
            SET BOOK_CODE =?, RETURN_DATE = ?;
    </entry>

    <entry key="getAllUserIds">
        <![CDATA[
            SELECT DISTINCT user_id FROM borrow_records
        ]]>
    </entry>


<!--    &lt;!&ndash; 책 대여를 위한 쿼리 &ndash;&gt;
    <entry key="rentBook">
        <![CDATA[
        INSERT INTO borrow_records (book_code, user_id, borrow_date)
        VALUES (?, ?, ?)
    ]]>


<!-    &lt;!&ndash; 책 반납을 위한 쿼리 &ndash;&gt;
    <entry key="returnBook">
        <![CDATA[
            UPDATE borrow_records
              SET return_date = ?
            WHERE book_code = ? AND user_id = ? AND return_date IS NULL
        ]]>
    </entry>-->


    <entry key="borrowRecords">
        SELECT * FROM borrow_records;
    </entry>



    <entry key="overDueBooks">
        UPDATE borrow_records
        SET over_due_books = ?
        WHERE book_code = ? AND return_date IS NULL;
    </entry>





    <entry key="overDueBookList">
        SELECT
            a.USER_ID, a.BOOK_CODE, b.BOOK_TITLE, a.BORROW_DATE, a.DUE_DATE
          FROM BORROW_RECORDS a JOIN BOOKS b
        ON a.BOOK_CODE = b.BOOK_CODE
        WHERE OVER_DUE_BOOKS = 1;
    </entry>

    <entry key="updateReturnDate">
        <![CDATA[
    UPDATE borrow_records
    SET return_date = ?
    WHERE book_code = ? AND user_id = ?
    ]]>
    </entry>

    <entry key="updateBookStatus">
        <![CDATA[
    UPDATE books
    SET book_status = ?
    WHERE book_code = ?
    ]]>
    </entry>

<!--    &lt;!&ndash; 현재 로그인한 사용자의 대여 중인 책 목록을 가져오는 쿼리 &ndash;&gt;
    <entry key="getBorrowedBooksByUser">
        <![CDATA[
            SELECT book_code, borrow_date, due_date
             FROM borrow_records
            WHERE user_id = ? AND return_date IS NULL
        ]]>
    </entry>

    &lt;!&ndash; 대여 가능한 책 목록을 가져오는 쿼리 &ndash;&gt;
    <entry key="getAvailableBooks">
        <![CDATA[
            SELECT book_code, book_title, book_author, book_genre
              FROM books
            WHERE book_status = false
        ]]>
    </entry>-->
</properties>